{"ast":null,"code":"import React,{useEffect,useState}from'react';import KakaoLogin from'react-kakao-login';import{GoogleLogin}from'@react-oauth/google';import{GoogleOAuthProvider}from'@react-oauth/google';import'./App.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){let[글제목,글제목변경]=useState(['State 사용하는 법','State를 사용하는 법2','State를 사용하는 법3']);let[날짜,날짜변경]=useState(['2월 22일']);let[count,countChange]=useState(0);let posts='React 정보';let lineSetting={borderWidth:'2px',borderColor:'black',marginTop:'30px'};// ----------------------------------Kakao----------------------------------\nconst[kakaodata,setKakaoData]=useState([]);const kakaoToken='f0761b5aef9f6f4fc0f8252320228d07';// 카카오 로그인 성공 시 실행되는 함수\nconst kakaoOnSuccess=async data=>{console.log('카카오 로그인 성공:',data);const idToken=data.response.access_token;// 엑세스 토큰 가져오기\n// 토큰 백엔드 서버로 전달\ntry{const res=await fetch('http://localhost:3001/api/kakao',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({access_token:idToken})// 토큰을 body에 담아 보냄 \n});const userData=await res.json();console.log('유저 데이터:',userData);// 받아온 유저 데이터를 상태에 저장\nsetKakaoData(userData);}catch(error){console.error('서버 통신 오류:',error);}};// 카카오 로그인 실패 시 실행되는 함수\nconst kakaoOnFailure=error=>{console.error('카카오 로그인 실패:',error);};// --------------------------------------------------------------------------\n// ----------------------------------Google----------------------------------\nconst[googledata,setGoogleData]=useState([]);const clientId='179922112081-o4p2sbdhc3u5g668c5nhmcf4ji1i2gml.apps.googleusercontent.com';const googleOnSuccess=async data=>{console.log('구글 로그인 성공:',data);const credential=data.credential;try{// credential을 서버로 전달하여 사용자 정보 처리\nconst res=await fetch('http://localhost:3001/api/google-login',{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify({credential})});const userData=await res.json();console.log('유저 데이터:',userData);// 받아온 유저 데이터를 상태에 저장\nsetGoogleData(userData);}catch(error){console.error('서버 통신 오류:',error);}};const googleOnFailure=error=>{console.error('구글 로그인 실패:',error);};// --------------------------------------------------------------------------\nfunction ChangeName(){var newArray=[...글제목];newArray[1]='onClick을 사용하는 법';글제목변경(newArray);}return/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"black-nav\",children:/*#__PURE__*/_jsx(\"div\",{children:\"\\uAC1C\\uBC1C \\uD3EC\\uD2B8\\uD3F4\\uB9AC\\uC624\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Login\",children:[/*#__PURE__*/_jsx(KakaoLogin,{token:kakaoToken,onSuccess:kakaoOnSuccess,onFail:kakaoOnFailure,render:_ref=>{let{onClick}=_ref;return/*#__PURE__*/_jsx(\"button\",{onClick:onClick,style:{backgroundColor:'#F7E600',color:'#3C1E1E',padding:'10px 20px',border:'none',borderRadius:'5px',cursor:'pointer',marginTop:'20px'},children:\"\\uCE74\\uCE74\\uC624 \\uB85C\\uADF8\\uC778\"});}}),/*#__PURE__*/_jsx(GoogleOAuthProvider,{clientId:clientId,children:/*#__PURE__*/_jsx(\"div\",{style:{display:'flex',// flexbox 사용\njustifyContent:'center',// 수평 가운데 정렬\nalignItems:'center',// 수직 가운데 정렬\nheight:'10vh',// 화면 전체 높이\ntextAlign:'center'// 텍스트 가운데 정렬\n},children:/*#__PURE__*/_jsx(GoogleLogin,{onSuccess:googleOnSuccess,onFailure:googleOnFailure})})})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"User\",children:[kakaodata.Nickname&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD658\\uC601\\uD569\\uB2C8\\uB2E4, \",kakaodata.Nickname,\"\\uB2D8!\"]})}),googledata.Nickname&&/*#__PURE__*/_jsx(\"div\",{children:/*#__PURE__*/_jsxs(\"h3\",{children:[\"\\uD658\\uC601\\uD569\\uB2C8\\uB2E4, \",googledata.Nickname,\"\\uB2D8!\"]})})]}),/*#__PURE__*/_jsx(Modal,{})]});}function Modal(){return/*#__PURE__*/_jsxs(\"div\",{className:\"modal\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC81C\\uBAA9\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uB0A0\\uC9DC\"}),/*#__PURE__*/_jsx(\"p\",{children:\"\\uC0C1\\uC138\\uB0B4\\uC6A9\"})]});}export default App;","map":{"version":3,"names":["React","useEffect","useState","KakaoLogin","GoogleLogin","GoogleOAuthProvider","jsx","_jsx","jsxs","_jsxs","App","글제목","글제목변경","날짜","날짜변경","count","countChange","posts","lineSetting","borderWidth","borderColor","marginTop","kakaodata","setKakaoData","kakaoToken","kakaoOnSuccess","data","console","log","idToken","response","access_token","res","fetch","method","headers","body","JSON","stringify","userData","json","error","kakaoOnFailure","googledata","setGoogleData","clientId","googleOnSuccess","credential","googleOnFailure","ChangeName","newArray","className","children","token","onSuccess","onFail","render","_ref","onClick","style","backgroundColor","color","padding","border","borderRadius","cursor","display","justifyContent","alignItems","height","textAlign","onFailure","Nickname","Modal"],"sources":["C:/Users/ib041/OneDrive/Desktop/React/mytestapp/Client/src/App.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport KakaoLogin from 'react-kakao-login';\nimport {GoogleLogin} from '@react-oauth/google';\nimport {GoogleOAuthProvider} from '@react-oauth/google';\nimport './App.css';\n\nfunction App() {\n\n  let [글제목, 글제목변경] = useState(['State 사용하는 법', 'State를 사용하는 법2', 'State를 사용하는 법3']);\n  let [날짜, 날짜변경] = useState(['2월 22일']);\n  let [count, countChange] = useState(0);\n\n  let posts = 'React 정보';\n  let lineSetting = { borderWidth: '2px', borderColor: 'black', marginTop: '30px' };\n\n  // ----------------------------------Kakao----------------------------------\n  const [kakaodata, setKakaoData] = useState([]);\n  const kakaoToken = 'f0761b5aef9f6f4fc0f8252320228d07';\n\n  // 카카오 로그인 성공 시 실행되는 함수\n  const kakaoOnSuccess = async (data)=>{\n    console.log('카카오 로그인 성공:', data);\n    const idToken = data.response.access_token; // 엑세스 토큰 가져오기\n\n    // 토큰 백엔드 서버로 전달\n    try {\n      const res = await fetch('http://localhost:3001/api/kakao', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ access_token: idToken }), // 토큰을 body에 담아 보냄 \n      });\n\n      const userData = await res.json();\n      console.log('유저 데이터:', userData);\n\n      // 받아온 유저 데이터를 상태에 저장\n      setKakaoData(userData);\n    } catch (error) {\n      console.error('서버 통신 오류:', error);\n    }\n  };\n\n  // 카카오 로그인 실패 시 실행되는 함수\n  const kakaoOnFailure = (error) => {\n    console.error('카카오 로그인 실패:', error)\n  }\n  // --------------------------------------------------------------------------\n  // ----------------------------------Google----------------------------------\n  const [googledata, setGoogleData] = useState([]);\n  const clientId = '179922112081-o4p2sbdhc3u5g668c5nhmcf4ji1i2gml.apps.googleusercontent.com';\n\n  const googleOnSuccess = async (data) => {\n    console.log('구글 로그인 성공:', data);\n    const credential = data.credential;\n    \n    try {\n      // credential을 서버로 전달하여 사용자 정보 처리\n      const res = await fetch('http://localhost:3001/api/google-login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ credential }),\n      });\n      \n      const userData = await res.json();\n      console.log('유저 데이터:', userData);\n\n      // 받아온 유저 데이터를 상태에 저장\n      setGoogleData(userData);\n    } catch (error) {\n      console.error('서버 통신 오류:', error);\n    }\n  };\n\n  const googleOnFailure = (error) => {\n    console.error('구글 로그인 실패:', error);\n  };\n\n  // --------------------------------------------------------------------------\n\n  function ChangeName() {\n    var newArray = [...글제목]\n    newArray[1] = 'onClick을 사용하는 법'\n    글제목변경(newArray)\n  }\n\n  return (\n    <div className=\"App\">\n      <div className=\"black-nav\">\n        <div>개발 포트폴리오</div>\n      </div>\n\n      <div className=\"Login\">\n        <KakaoLogin \n          token = {kakaoToken}\n          onSuccess={kakaoOnSuccess}\n          onFail={kakaoOnFailure}\n          render={({ onClick }) => (\n            <button\n              onClick={onClick}\n              style={{\n                backgroundColor: '#F7E600',\n                color: '#3C1E1E',\n                padding: '10px 20px',\n                border: 'none',\n                borderRadius: '5px',\n                cursor: 'pointer',\n                marginTop: '20px',\n              }}\n            >\n              카카오 로그인\n            </button>\n          )}\n        />\n\n        <GoogleOAuthProvider clientId={clientId}>\n          <div style={{\n          display: 'flex',             // flexbox 사용\n          justifyContent: 'center',    // 수평 가운데 정렬\n          alignItems: 'center',        // 수직 가운데 정렬\n          height: '10vh',              // 화면 전체 높이\n          textAlign: 'center',         // 텍스트 가운데 정렬\n          }}>\n            <GoogleLogin \n              onSuccess={googleOnSuccess}\n              onFailure={googleOnFailure}\n            />\n          </div>\n        </GoogleOAuthProvider>\n      </div>\n\n      <div className='User'>\n        {kakaodata.Nickname && (\n          <div>\n            <h3>환영합니다, {kakaodata.Nickname}님!</h3>\n          </div>\n        )}\n        {googledata.Nickname && (\n          <div>\n            <h3>환영합니다, {googledata.Nickname}님!</h3>\n          </div>\n        )}\n      </div>\n\n      <Modal />\n    </div>\n  );\n}\n\nfunction Modal() {\n  return (\n    <div className='modal'>\n      <h2>제목</h2>\n        <p>날짜</p>\n        <p>상세내용</p>\n    </div>\n  )\n}\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}